
/**
* Copyright (c) 2020 Copyright bp All Rights Reserved.
* Author: lipengxiang
* Date: 2020-02-24 11:03
* Desc: 
*/

button,
.bp-btn {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-touch-callout: none;
  touch-action: manipulation;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  display: inline-block;
  text-align: center;
  vertical-align: middle;

  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  font-size: $bpButtonFontSize;
  font-weight: $bpButtonFontWeight;
  padding: .38rem .48rem;
  margin: 2px;
  line-height: 1.25em;
  border-radius: $bpButtonBorderRadius;
  transition: background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
  white-space: nowrap;
  word-wrap: break-word;
  text-transform: none;
  overflow: visible;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  outline: 0;
  outline-offset: 0;
  text-decoration: none;
  background-color: rgba(0, 0, 0, 0);
  border: none;
  cursor: pointer;

  svg, .bp-icon {
    vertical-align: middle;
    &:first-child {
      margin-right: .24rem;
    }
    &:last-child {
      margin-left: .24rem;
    }
  }

  &:active {
    opacity: 0.6;
  }

  &:disabled {
    opacity: .5;
    cursor: not-allowed;
    touch-action: none;
    pointer-events: none;
  }
}

/** default */
button,
.bp-btn {
  color: map-get($bpButtonColor, Primary);

  &:hover {
    color: rgba(map-get($bpButtonColor, Primary), .7);
  }

  &.bp-btnBorder {
    color: map-get($bpButtonColor, Primary);
    border: solid 1px rgba(map-get($bpButtonColor, Primary), .6);
    background-color: rgba(0, 0, 0, 0);
    &:hover {
      color: rgba(map-get($bpButtonColor, Primary), .6);
      border: solid 1px rgba(map-get($bpButtonColor, Primary), .4);
      background-color: rgba(0, 0, 0, 0);
    }
  }
  
  &.bp-btnSolid {
    color: map-get($bpButtonSolidTextColor, Primary);
    background-color: rgba(map-get($bpButtonSolidBgColor, Primary), .9);
    border: solid 1px rgba(map-get($bpButtonSolidBorderColor, Primary), .6);
    &:hover {
      color: rgba(map-get($bpButtonSolidTextColor, Primary), .8);
      background-color: rgba(map-get($bpButtonSolidBgColor, Primary), .7);
      border: solid 1px rgba(map-get($bpButtonSolidBorderColor, Primary), .4);
    }
  }
}

/** each button */
@each $name, $color in $bpButtonColor {
  .bp-btn#{$name} {
    color: $color;

    &:hover {
      color: rgba($color, .7);
      background-color: rgba(0, 0, 0, 0);
    }

    &.bp-btnBorder {
      color: $color;
      border: solid 1px rgba($color, .6);
      background-color: rgba(0, 0, 0, 0);
      &:hover {
        color: rgba($color, .6);
        border: solid 1px rgba($color, .4);
        background-color: rgba(0, 0, 0, 0);
      }
    }
    
    &.bp-btnSolid {
      color: map-get($bpButtonSolidTextColor, $name);
      background-color: rgba(map-get($bpButtonSolidBgColor, $name), .9);
      border: solid 1px rgba(map-get($bpButtonSolidBorderColor, $name), .6);
      &:hover {
        color: rgba(map-get($bpButtonSolidTextColor, $name), .8);
        background-color: rgba(map-get($bpButtonSolidBgColor, $name), .7);
        border: solid 1px rgba(map-get($bpButtonSolidBorderColor, $name), .4);
      }
    }
  }
}
